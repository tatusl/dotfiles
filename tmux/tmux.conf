# Smart pane switching with awareness of Vim splits.
# See: https://github.com/alexghergh/nvim-tmux-navigation
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' 'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' 'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' 'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' 'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"
bind-key -n 'C-Space' if-shell "$is_vim" 'send-keys C-Space' 'select-pane -t:.+'

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
bind-key -T copy-mode-vi 'C-Space' select-pane -t:.+

# Shift arrow to switch windows
bind -n S-Left  previous-window
bind -n S-Right next-window

set-option -g allow-rename off

# Open new panes with same directory than the original
bind 'j' split-window -c "#{pane_current_path}"
bind 'l' split-window -h -c "#{pane_current_path}"

# Indicate 256-color support
set -g default-terminal "screen-256color"

# Source tmuxline config
if-shell "test -f tmuxline.conf" "source tmuxline.conf"

# MacOS clipboard integration and vi-style copy-paste
set-option -g default-command "reattach-to-user-namespace -l zsh"

bind-key -T copy-mode-vi 'v' send-keys -X begin-selection
bind-key -T copy-mode-vi 'y' send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# Lower escape timing from 500ms to 50ms for quicker response to scroll-buffer access.
set -s escape-time 10

# Handle direnv
set-option -g update-environment "DIRENV_DIFF DIRENV_DIR DIRENV_WATCHES"
set-environment -gu DIRENV_DIFF
set-environment -gu DIRENV_DIR
set-environment -gu DIRENV_WATCHES
set-environment -gu DIRENV_LAYOUT

if-shell "test -f ~/.tmuxline.conf" "source ~/.tmuxline.conf"

bind 'u' if-shell -F '#{==:#{session_name},scratch}' {
    detach-client
  } {
    display-popup -E "tmux new-session -A -s scratch"
}
