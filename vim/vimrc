"Download vimplug if it not exists
if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

"Specify a directory for plugins
call plug#begin('~/.vimplug')

"Define plugins which vim-plug loads
Plug 'jiangmiao/auto-pairs'
Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'junegunn/fzf.vim'
Plug 'edkolev/tmuxline.vim'
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'ntpeters/vim-better-whitespace'
Plug 'altercation/vim-colors-solarized'
Plug 'tpope/vim-fugitive'
Plug 'elzr/vim-json'
Plug 'sheerun/vim-polyglot'
Plug 'hashivim/vim-terraform'
Plug 'scrooloose/nerdtree'
Plug 'tpope/vim-sleuth'
Plug 'christoomey/vim-tmux-navigator'
Plug 'rking/ag.vim'
Plug 'shime/vim-livedown'
Plug '907th/vim-auto-save'
Plug 'yggdroot/indentLine'

" Plugins for React/JS development
Plug 'pangloss/vim-javascript'
Plug 'peitalin/vim-jsx-typescript'

" coc.nvim plugin and its plugins
Plug 'neoclide/coc.nvim', {'branch': 'release'}
let g:coc_global_extensions = [
  \ 'coc-tsserver',
  \ 'coc-json',
  \ 'coc-eslint',
  \ 'coc-prettier',
  \ 'coc-yaml',
  \ 'coc-markdownlint'
  \ ]

"Initialize plugin system
call plug#end()

"Prettier command
command! -nargs=0 Prettier :CocCommand prettier.formatFile

let g:indentLine_char = '|'

"Map leader
let mapleader = ","

"Keymappings
nnoremap <leader>a :FzfRg<CR>
nnoremap <leader>A :FzfRg!<CR>
nnoremap <leader>f <kDivide>
nnoremap <leader>r :%s///g<left><left><left>
nnoremap <leader>c :%s///gc<left><left><left><left>
nnoremap <leader>o :FzfFiles<CR>
nnoremap <leader>O :FzfFiles!<CR>
nnoremap <silent> <leader>s :setlocal spell! spelllang=en_us<CR>
nnoremap <silent> <leader>l :LivedownToggle<CR>
nnoremap <leader>t :TerraformFmt<CR>
nnoremap <leader>p :Prettier<CR>

"Trim whitespace
nnoremap <leader>c :%s/\s\+$//<CR>

nnoremap <C-p> :FzfFiles<Cr>

nnoremap <Leader><space> :noh<cr>

"Initial settings
syntax on
filetype plugin indent on
set rnu

"Shows the match while typing
set incsearch
" Highlight found searches
set hlsearch
" Search case insensitive...
set ignorecase
" ... but not when search pattern contains upper case characters
set smartcase

"Break the habit of using arrow keys for movement
noremap <up> <nop>
noremap <down> <nop>
noremap <left> <nop>
noremap <right> <nop>

"Set solarized colorscheme
syntax enable
set background=dark
colorscheme solarized

"vim-airline
set laststatus=2
let g:airline_theme='solarized'

"Detect filechanges
:set autoread

"Prefix fzf commands with "Fzf"
let g:fzf_command_prefix = 'Fzf'

"Do not use swap or backup file
set noswapfile
set nobackup
set nowritebackup

"Indentation
set tabstop=8 softtabstop=0 expandtab shiftwidth=4 smarttab
set autoindent

"Better split switching
map <C-j> <C-W>j
map <C-k> <C-W>k
map <C-h> <C-W>h
map <C-l> <C-W>l

"Open new splits to the bottom and right
set splitbelow
set splitright

"Use system clipboard:
set clipboard=unnamed

"Toggle Nerdtree
map <C-n> :NERDTreeToggle<CR>

"Rendering
set ttyfast

"Automatic resize
:autocmd VimResized * wincmd =

"Always start searching from project root instead of the cwd
let g:ag_working_path_mode="r"

"Disable intro message
set shortmess=I

"Disable bells
set belloff=all

"Spell-check Git Commit Messages
autocmd FileType gitcommit setlocal spell

let g:auto_save = 0
augroup ft_markdown
  au!
  au FileType markdown let b:auto_save = 1
augroup END

let g:auto_save_silent = 1  " do not display the auto-save notification
